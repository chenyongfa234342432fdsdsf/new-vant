import { PropFilter, StaticPropFilter } from 'react-docgen-typescript/lib/parser';

interface IStaticPropFilter extends StaticPropFilter {
    /**
     * skip props which parsed from node_modules
     */
    skipNodeModules?: boolean;
}
declare type PropFilterType = IStaticPropFilter | PropFilter;
declare type ApiParserProps = {
    propFilter?: PropFilterType;
};

declare type MDocCoreOptions = {
    prefix?: string;
    alias?: Record<string, string>;
    apiParser?: boolean | ApiParserProps;
    replaceHtml?: (htmlString: string) => string;
    previewLangs?: string[];
    passivePreview?: boolean;
    localPkgs?: Record<string, {
        version: string;
        css?: string;
    }>;
};
declare type RemarkReturn = {
    demos: any[];
    value: string;
    frontmatter: Record<string, string>;
    slugs: {
        depth: number;
        text: string;
        id: string;
    }[];
    definitions?: Record<string, Record<string, string>[]>;
    title?: string;
    updatedTime?: string;
};
declare function remark(source: any, id: any, options?: MDocCoreOptions): Promise<RemarkReturn>;

export { remark as default };
