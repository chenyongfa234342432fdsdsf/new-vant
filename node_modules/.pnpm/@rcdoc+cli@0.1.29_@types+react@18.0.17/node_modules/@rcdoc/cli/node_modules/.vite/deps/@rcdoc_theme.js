import {
  clsx_m_default
} from "./chunk-BHEQFVJ3.js";
import {
  require_react
} from "./chunk-Z6WPLVXU.js";
import {
  __commonJS,
  __export,
  __toESM
} from "./chunk-HUBM7RA2.js";

// ../../node_modules/.pnpm/lz-string@1.4.4/node_modules/lz-string/libs/lz-string.js
var require_lz_string = __commonJS({
  "../../node_modules/.pnpm/lz-string@1.4.4/node_modules/lz-string/libs/lz-string.js"(exports, module) {
    var LZString2 = function() {
      var f = String.fromCharCode;
      var keyStrBase64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
      var keyStrUriSafe = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$";
      var baseReverseDic = {};
      function getBaseValue(alphabet, character) {
        if (!baseReverseDic[alphabet]) {
          baseReverseDic[alphabet] = {};
          for (var i = 0; i < alphabet.length; i++) {
            baseReverseDic[alphabet][alphabet.charAt(i)] = i;
          }
        }
        return baseReverseDic[alphabet][character];
      }
      var LZString3 = {
        compressToBase64: function(input) {
          if (input == null)
            return "";
          var res = LZString3._compress(input, 6, function(a) {
            return keyStrBase64.charAt(a);
          });
          switch (res.length % 4) {
            default:
            case 0:
              return res;
            case 1:
              return res + "===";
            case 2:
              return res + "==";
            case 3:
              return res + "=";
          }
        },
        decompressFromBase64: function(input) {
          if (input == null)
            return "";
          if (input == "")
            return null;
          return LZString3._decompress(input.length, 32, function(index) {
            return getBaseValue(keyStrBase64, input.charAt(index));
          });
        },
        compressToUTF16: function(input) {
          if (input == null)
            return "";
          return LZString3._compress(input, 15, function(a) {
            return f(a + 32);
          }) + " ";
        },
        decompressFromUTF16: function(compressed) {
          if (compressed == null)
            return "";
          if (compressed == "")
            return null;
          return LZString3._decompress(compressed.length, 16384, function(index) {
            return compressed.charCodeAt(index) - 32;
          });
        },
        compressToUint8Array: function(uncompressed) {
          var compressed = LZString3.compress(uncompressed);
          var buf = new Uint8Array(compressed.length * 2);
          for (var i = 0, TotalLen = compressed.length; i < TotalLen; i++) {
            var current_value = compressed.charCodeAt(i);
            buf[i * 2] = current_value >>> 8;
            buf[i * 2 + 1] = current_value % 256;
          }
          return buf;
        },
        decompressFromUint8Array: function(compressed) {
          if (compressed === null || compressed === void 0) {
            return LZString3.decompress(compressed);
          } else {
            var buf = new Array(compressed.length / 2);
            for (var i = 0, TotalLen = buf.length; i < TotalLen; i++) {
              buf[i] = compressed[i * 2] * 256 + compressed[i * 2 + 1];
            }
            var result = [];
            buf.forEach(function(c) {
              result.push(f(c));
            });
            return LZString3.decompress(result.join(""));
          }
        },
        compressToEncodedURIComponent: function(input) {
          if (input == null)
            return "";
          return LZString3._compress(input, 6, function(a) {
            return keyStrUriSafe.charAt(a);
          });
        },
        decompressFromEncodedURIComponent: function(input) {
          if (input == null)
            return "";
          if (input == "")
            return null;
          input = input.replace(/ /g, "+");
          return LZString3._decompress(input.length, 32, function(index) {
            return getBaseValue(keyStrUriSafe, input.charAt(index));
          });
        },
        compress: function(uncompressed) {
          return LZString3._compress(uncompressed, 16, function(a) {
            return f(a);
          });
        },
        _compress: function(uncompressed, bitsPerChar, getCharFromInt) {
          if (uncompressed == null)
            return "";
          var i, value, context_dictionary = {}, context_dictionaryToCreate = {}, context_c = "", context_wc = "", context_w = "", context_enlargeIn = 2, context_dictSize = 3, context_numBits = 2, context_data = [], context_data_val = 0, context_data_position = 0, ii;
          for (ii = 0; ii < uncompressed.length; ii += 1) {
            context_c = uncompressed.charAt(ii);
            if (!Object.prototype.hasOwnProperty.call(context_dictionary, context_c)) {
              context_dictionary[context_c] = context_dictSize++;
              context_dictionaryToCreate[context_c] = true;
            }
            context_wc = context_w + context_c;
            if (Object.prototype.hasOwnProperty.call(context_dictionary, context_wc)) {
              context_w = context_wc;
            } else {
              if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {
                if (context_w.charCodeAt(0) < 256) {
                  for (i = 0; i < context_numBits; i++) {
                    context_data_val = context_data_val << 1;
                    if (context_data_position == bitsPerChar - 1) {
                      context_data_position = 0;
                      context_data.push(getCharFromInt(context_data_val));
                      context_data_val = 0;
                    } else {
                      context_data_position++;
                    }
                  }
                  value = context_w.charCodeAt(0);
                  for (i = 0; i < 8; i++) {
                    context_data_val = context_data_val << 1 | value & 1;
                    if (context_data_position == bitsPerChar - 1) {
                      context_data_position = 0;
                      context_data.push(getCharFromInt(context_data_val));
                      context_data_val = 0;
                    } else {
                      context_data_position++;
                    }
                    value = value >> 1;
                  }
                } else {
                  value = 1;
                  for (i = 0; i < context_numBits; i++) {
                    context_data_val = context_data_val << 1 | value;
                    if (context_data_position == bitsPerChar - 1) {
                      context_data_position = 0;
                      context_data.push(getCharFromInt(context_data_val));
                      context_data_val = 0;
                    } else {
                      context_data_position++;
                    }
                    value = 0;
                  }
                  value = context_w.charCodeAt(0);
                  for (i = 0; i < 16; i++) {
                    context_data_val = context_data_val << 1 | value & 1;
                    if (context_data_position == bitsPerChar - 1) {
                      context_data_position = 0;
                      context_data.push(getCharFromInt(context_data_val));
                      context_data_val = 0;
                    } else {
                      context_data_position++;
                    }
                    value = value >> 1;
                  }
                }
                context_enlargeIn--;
                if (context_enlargeIn == 0) {
                  context_enlargeIn = Math.pow(2, context_numBits);
                  context_numBits++;
                }
                delete context_dictionaryToCreate[context_w];
              } else {
                value = context_dictionary[context_w];
                for (i = 0; i < context_numBits; i++) {
                  context_data_val = context_data_val << 1 | value & 1;
                  if (context_data_position == bitsPerChar - 1) {
                    context_data_position = 0;
                    context_data.push(getCharFromInt(context_data_val));
                    context_data_val = 0;
                  } else {
                    context_data_position++;
                  }
                  value = value >> 1;
                }
              }
              context_enlargeIn--;
              if (context_enlargeIn == 0) {
                context_enlargeIn = Math.pow(2, context_numBits);
                context_numBits++;
              }
              context_dictionary[context_wc] = context_dictSize++;
              context_w = String(context_c);
            }
          }
          if (context_w !== "") {
            if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {
              if (context_w.charCodeAt(0) < 256) {
                for (i = 0; i < context_numBits; i++) {
                  context_data_val = context_data_val << 1;
                  if (context_data_position == bitsPerChar - 1) {
                    context_data_position = 0;
                    context_data.push(getCharFromInt(context_data_val));
                    context_data_val = 0;
                  } else {
                    context_data_position++;
                  }
                }
                value = context_w.charCodeAt(0);
                for (i = 0; i < 8; i++) {
                  context_data_val = context_data_val << 1 | value & 1;
                  if (context_data_position == bitsPerChar - 1) {
                    context_data_position = 0;
                    context_data.push(getCharFromInt(context_data_val));
                    context_data_val = 0;
                  } else {
                    context_data_position++;
                  }
                  value = value >> 1;
                }
              } else {
                value = 1;
                for (i = 0; i < context_numBits; i++) {
                  context_data_val = context_data_val << 1 | value;
                  if (context_data_position == bitsPerChar - 1) {
                    context_data_position = 0;
                    context_data.push(getCharFromInt(context_data_val));
                    context_data_val = 0;
                  } else {
                    context_data_position++;
                  }
                  value = 0;
                }
                value = context_w.charCodeAt(0);
                for (i = 0; i < 16; i++) {
                  context_data_val = context_data_val << 1 | value & 1;
                  if (context_data_position == bitsPerChar - 1) {
                    context_data_position = 0;
                    context_data.push(getCharFromInt(context_data_val));
                    context_data_val = 0;
                  } else {
                    context_data_position++;
                  }
                  value = value >> 1;
                }
              }
              context_enlargeIn--;
              if (context_enlargeIn == 0) {
                context_enlargeIn = Math.pow(2, context_numBits);
                context_numBits++;
              }
              delete context_dictionaryToCreate[context_w];
            } else {
              value = context_dictionary[context_w];
              for (i = 0; i < context_numBits; i++) {
                context_data_val = context_data_val << 1 | value & 1;
                if (context_data_position == bitsPerChar - 1) {
                  context_data_position = 0;
                  context_data.push(getCharFromInt(context_data_val));
                  context_data_val = 0;
                } else {
                  context_data_position++;
                }
                value = value >> 1;
              }
            }
            context_enlargeIn--;
            if (context_enlargeIn == 0) {
              context_enlargeIn = Math.pow(2, context_numBits);
              context_numBits++;
            }
          }
          value = 2;
          for (i = 0; i < context_numBits; i++) {
            context_data_val = context_data_val << 1 | value & 1;
            if (context_data_position == bitsPerChar - 1) {
              context_data_position = 0;
              context_data.push(getCharFromInt(context_data_val));
              context_data_val = 0;
            } else {
              context_data_position++;
            }
            value = value >> 1;
          }
          while (true) {
            context_data_val = context_data_val << 1;
            if (context_data_position == bitsPerChar - 1) {
              context_data.push(getCharFromInt(context_data_val));
              break;
            } else
              context_data_position++;
          }
          return context_data.join("");
        },
        decompress: function(compressed) {
          if (compressed == null)
            return "";
          if (compressed == "")
            return null;
          return LZString3._decompress(compressed.length, 32768, function(index) {
            return compressed.charCodeAt(index);
          });
        },
        _decompress: function(length, resetValue, getNextValue) {
          var dictionary = [], next, enlargeIn = 4, dictSize = 4, numBits = 3, entry = "", result = [], i, w, bits, resb, maxpower, power, c, data = { val: getNextValue(0), position: resetValue, index: 1 };
          for (i = 0; i < 3; i += 1) {
            dictionary[i] = i;
          }
          bits = 0;
          maxpower = Math.pow(2, 2);
          power = 1;
          while (power != maxpower) {
            resb = data.val & data.position;
            data.position >>= 1;
            if (data.position == 0) {
              data.position = resetValue;
              data.val = getNextValue(data.index++);
            }
            bits |= (resb > 0 ? 1 : 0) * power;
            power <<= 1;
          }
          switch (next = bits) {
            case 0:
              bits = 0;
              maxpower = Math.pow(2, 8);
              power = 1;
              while (power != maxpower) {
                resb = data.val & data.position;
                data.position >>= 1;
                if (data.position == 0) {
                  data.position = resetValue;
                  data.val = getNextValue(data.index++);
                }
                bits |= (resb > 0 ? 1 : 0) * power;
                power <<= 1;
              }
              c = f(bits);
              break;
            case 1:
              bits = 0;
              maxpower = Math.pow(2, 16);
              power = 1;
              while (power != maxpower) {
                resb = data.val & data.position;
                data.position >>= 1;
                if (data.position == 0) {
                  data.position = resetValue;
                  data.val = getNextValue(data.index++);
                }
                bits |= (resb > 0 ? 1 : 0) * power;
                power <<= 1;
              }
              c = f(bits);
              break;
            case 2:
              return "";
          }
          dictionary[3] = c;
          w = c;
          result.push(c);
          while (true) {
            if (data.index > length) {
              return "";
            }
            bits = 0;
            maxpower = Math.pow(2, numBits);
            power = 1;
            while (power != maxpower) {
              resb = data.val & data.position;
              data.position >>= 1;
              if (data.position == 0) {
                data.position = resetValue;
                data.val = getNextValue(data.index++);
              }
              bits |= (resb > 0 ? 1 : 0) * power;
              power <<= 1;
            }
            switch (c = bits) {
              case 0:
                bits = 0;
                maxpower = Math.pow(2, 8);
                power = 1;
                while (power != maxpower) {
                  resb = data.val & data.position;
                  data.position >>= 1;
                  if (data.position == 0) {
                    data.position = resetValue;
                    data.val = getNextValue(data.index++);
                  }
                  bits |= (resb > 0 ? 1 : 0) * power;
                  power <<= 1;
                }
                dictionary[dictSize++] = f(bits);
                c = dictSize - 1;
                enlargeIn--;
                break;
              case 1:
                bits = 0;
                maxpower = Math.pow(2, 16);
                power = 1;
                while (power != maxpower) {
                  resb = data.val & data.position;
                  data.position >>= 1;
                  if (data.position == 0) {
                    data.position = resetValue;
                    data.val = getNextValue(data.index++);
                  }
                  bits |= (resb > 0 ? 1 : 0) * power;
                  power <<= 1;
                }
                dictionary[dictSize++] = f(bits);
                c = dictSize - 1;
                enlargeIn--;
                break;
              case 2:
                return result.join("");
            }
            if (enlargeIn == 0) {
              enlargeIn = Math.pow(2, numBits);
              numBits++;
            }
            if (dictionary[c]) {
              entry = dictionary[c];
            } else {
              if (c === dictSize) {
                entry = w + w.charAt(0);
              } else {
                return null;
              }
            }
            result.push(entry);
            dictionary[dictSize++] = w + entry.charAt(0);
            enlargeIn--;
            w = entry;
            if (enlargeIn == 0) {
              enlargeIn = Math.pow(2, numBits);
              numBits++;
            }
          }
        }
      };
      return LZString3;
    }();
    if (typeof define === "function" && define.amd) {
      define(function() {
        return LZString2;
      });
    } else if (typeof module !== "undefined" && module != null) {
      module.exports = LZString2;
    }
  }
});

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/hooks/useCopy.ts
var import_react = __toESM(require_react());

// ../../node_modules/.pnpm/copy-text-to-clipboard@3.0.1/node_modules/copy-text-to-clipboard/index.js
function copyTextToClipboard(input, { target = document.body } = {}) {
  const element = document.createElement("textarea");
  const previouslyFocusedElement = document.activeElement;
  element.value = input;
  element.setAttribute("readonly", "");
  element.style.contain = "strict";
  element.style.position = "absolute";
  element.style.left = "-9999px";
  element.style.fontSize = "12pt";
  const selection = document.getSelection();
  let originalRange = false;
  if (selection.rangeCount > 0) {
    originalRange = selection.getRangeAt(0);
  }
  target.append(element);
  element.select();
  element.selectionStart = 0;
  element.selectionEnd = input.length;
  let isSuccess = false;
  try {
    isSuccess = document.execCommand("copy");
  } catch {
  }
  element.remove();
  if (originalRange) {
    selection.removeAllRanges();
    selection.addRange(originalRange);
  }
  if (previouslyFocusedElement) {
    previouslyFocusedElement.focus();
  }
  return isSuccess;
}

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/hooks/useCopy.ts
var useCopy_default = () => {
  const [timer, setTimer] = (0, import_react.useState)();
  const [status, setStatus] = (0, import_react.useState)("ready");
  const handler = (0, import_react.useCallback)((text) => {
    copyTextToClipboard(text);
    setStatus("copied");
    if (timer) {
      clearTimeout(timer);
    }
    setTimer(
      setTimeout(() => {
        setStatus("ready");
      }, 2e3)
    );
  }, []);
  return [handler, status];
};

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/hooks/useCodeSandbox.ts
var import_react2 = __toESM(require_react());
var import_lz_string = __toESM(require_lz_string());
var CSB_API_ENDPOINT = "https://codesandbox.io/api/v1/sandboxes/define";
function serialize(data) {
  return import_lz_string.default.compressToBase64(JSON.stringify(data)).replace(/\+/g, "-").replace(/\//g, "_").replace(/=+$/, "");
}
function getTextContent(raw) {
  const elm = document.createElement("span");
  elm.innerHTML = raw;
  const text = elm.textContent;
  elm.remove();
  return text;
}
function getCSBData(opts) {
  var _a, _b;
  const isTSX = opts.lang === "tsx";
  const ext = isTSX ? ".tsx" : ".jsx";
  const files = {};
  const deps = {};
  const CSSDeps = Object.values(opts.dependencies).filter((dep) => dep.css);
  const appFileName = `App${ext}`;
  const entryFileName = `index${ext}`;
  Object.entries(opts.dependencies).forEach(([dep, { type, value }]) => {
    if (type === "NPM")
      deps[dep] = value;
  });
  if (!deps["react-dom"]) {
    deps["react-dom"] = deps.react || "latest";
  }
  files["sandbox.config.json"] = {
    content: JSON.stringify(
      {
        template: "create-react-app"
      },
      null,
      2
    )
  };
  files["package.json"] = {
    content: JSON.stringify(
      {
        name: (_a = opts.meta) == null ? void 0 : _a.title,
        description: getTextContent(((_b = opts.meta) == null ? void 0 : _b.description) || "An auto-generated demo by rcdoc"),
        main: entryFileName,
        dependencies: deps,
        devDependencies: isTSX ? { typescript: "^3" } : {}
      },
      null,
      2
    )
  };
  files["index.html"] = { content: `<div id="root" style="margin: ${opts.margin || ""}"></div>` };
  files[entryFileName] = {
    content: `/**
* This is an auto-generated demo by rcdoc
* if you think it is not working as expected,
* please report the issue at
* https://github.com/3lang3/rcdoc/issues
**/

import React from 'react';
import { createRoot } from 'react-dom/client'
${CSSDeps.map(({ css }) => `import '${css}';`).join("\n")}
import App from './App';
${opts.extra ? `${opts.extra}
` : "\n"}

const container = document.querySelector('#root')
const root = createRoot(container)
root.render(<App />)`
  };
  Object.entries(opts.dependencies).forEach(([filename, { value, type }]) => {
    if (type !== "FILE")
      return;
    files[filename.startsWith("index") ? appFileName : filename] = {
      content: value
    };
  });
  return serialize({ files });
}
var useCodeSandbox_default = (opts, userOptions) => {
  const [handler, setHandler] = (0, import_react2.useState)();
  (0, import_react2.useEffect)(() => {
    var _a;
    if (opts && Object.keys(opts.dependencies || []).length) {
      const form = document.createElement("form");
      const input = document.createElement("input");
      const queryInput = document.createElement("input");
      const data = getCSBData(opts);
      form.method = "POST";
      form.target = "_blank";
      form.style.display = "none";
      form.action = CSB_API_ENDPOINT;
      form.appendChild(input);
      form.appendChild(queryInput);
      form.setAttribute("data-demo", ((_a = opts.meta) == null ? void 0 : _a.title) || "");
      input.name = "parameters";
      input.value = data;
      if (userOptions == null ? void 0 : userOptions.simulator) {
        queryInput.name = "query";
        queryInput.value = "resolutionWidth=320&resolutionHeight=675";
      }
      document.body.appendChild(form);
      setHandler(() => () => form.submit());
      return () => form.remove();
    }
    return () => null;
  }, [JSON.stringify(opts)]);
  return handler;
};

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/hooks/useStackBlitz.ts
var import_react3 = __toESM(require_react());
var SB_API_ENDPOINT = "https://stackblitz.com/run";
function getTextContent2(raw) {
  const elm = document.createElement("span");
  elm.innerHTML = raw;
  const text = elm.textContent;
  elm.remove();
  return text;
}
function getStackblitzData(opts) {
  var _a, _b;
  const isTSX = opts.lang === "tsx";
  const ext = isTSX ? ".tsx" : ".jsx";
  const files = {};
  const dependencies = {};
  const CSSDeps = Object.values(opts.dependencies).filter((dep) => dep.css);
  const appFileName = `src/App${ext}`;
  const entryFileName = `src/index.js`;
  const title = (_a = opts.meta) == null ? void 0 : _a.title;
  const description = getTextContent2(((_b = opts.meta) == null ? void 0 : _b.description) || "An auto-generated demo by rcdoc");
  const devDependencies = isTSX ? { typescript: "^3" } : {};
  Object.entries(opts.dependencies).forEach(([dep, { type, value }]) => {
    if (type === "NPM")
      dependencies[dep] = value;
  });
  if (!dependencies["react-dom"]) {
    dependencies["react-dom"] = dependencies.react || "latest";
  }
  dependencies["@babel/runtime"] = "^7.17.9";
  files["public/index.html"] = {
    content: `<!DOCTYPE html>
  <html>
    <head>
      <title>${title}</title>
    </head>
    <body>
      <div id="root" style="margin: ${opts.margin || ""}"></div>
    </body>
  </html>
  `.trim()
  };
  files[entryFileName] = {
    content: `/**
* This is an auto-generated demo by rcdco
* if you think it is not working as expected,
* please report the issue at
* https://github.com/3lang3/rcdco/issues
**/

import React from 'react';
import { createRoot } from 'react-dom/client'
${CSSDeps.map(({ css }) => `import '${css}';`).join("\n")}
import App from './App';
${opts.extra ? `${opts.extra}
` : "\n"}

const container = document.querySelector('#root')
const root = createRoot(container)
root.render(<App />)`
  };
  Object.entries(opts.dependencies).forEach(([filename, { value, type }]) => {
    if (type !== "FILE")
      return;
    files[filename.startsWith("index") ? appFileName : `src/${filename}`] = {
      content: value
    };
  });
  return { title, description, dependencies, devDependencies, files };
}
function addHiddenInput(form, name, value) {
  const input = document.createElement("input");
  input.type = "hidden";
  input.name = name;
  input.value = value;
  form.appendChild(input);
}
var useStackBlitz_default = (opts, api = SB_API_ENDPOINT) => {
  const [handler, setHandler] = (0, import_react3.useState)();
  (0, import_react3.useEffect)(() => {
    var _a, _b;
    if (opts && Object.keys(opts.dependencies || []).length) {
      const demoConfig = getStackblitzData(opts);
      const form = document.createElement("form");
      form.method = "POST";
      form.target = "_blank";
      form.action = api;
      const title = (_a = opts.meta) == null ? void 0 : _a.title;
      const description = getTextContent2(
        ((_b = opts.meta) == null ? void 0 : _b.description) || "An auto-generated demo by mdoc"
      );
      addHiddenInput(form, "project[template]", "create-react-app");
      addHiddenInput(form, "project[title]", title);
      addHiddenInput(form, "project[description]", `# ${title}
${description}`);
      addHiddenInput(form, "project[dependencies]", JSON.stringify(demoConfig.dependencies));
      addHiddenInput(form, "project[devDependencies]", JSON.stringify(demoConfig.devDependencies));
      Object.keys(demoConfig.files).forEach((key) => {
        const value = demoConfig.files[key].content;
        addHiddenInput(form, `project[files][${key}]`, value);
      });
      document.body.appendChild(form);
      setHandler(() => () => form.submit());
      return () => form.remove();
    }
    return () => null;
  }, [JSON.stringify(opts)]);
  return handler;
};

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/hooks/useApiData.ts
var import_react5 = __toESM(require_react());

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/context.ts
var import_react4 = __toESM(require_react());
var MdocSiteContext = import_react4.default.createContext({});
var context_default = MdocSiteContext;

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/hooks/useApiData.ts
function getApiData(definitions, locale) {
  return definitions.map((props) => {
    const result = { description: props.description };
    Object.keys(props).forEach((prop) => {
      if (prop.startsWith("description.")) {
        const [, propLocale] = prop.match(/^description\.(.*)$/);
        if (propLocale && propLocale === locale) {
          result.description = props[prop];
        }
      } else {
        result[prop] = props[prop];
      }
    });
    return result;
  });
}
var useApiData_default = (definitions) => {
  const {
    locale
  } = import_react5.default.useContext(context_default);
  const ref = import_react5.default.useRef(false);
  const [data, setData] = import_react5.default.useState(() => !locale ? definitions : getApiData(definitions, locale.current[0]));
  import_react5.default.useEffect(() => {
    if (!ref.current)
      return;
    setData(!locale ? definitions : getApiData(definitions, locale.current[0]));
  }, [locale]);
  import_react5.default.useEffect(() => {
    if (!ref.current)
      ref.current = true;
  }, []);
  return data;
};

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/utils/createUseStorageState.ts
var import_react9 = __toESM(require_react());

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/hooks/useMemoizedFn.ts
var import_react6 = __toESM(require_react());
function useMemoizedFn(fn) {
  if (true) {
    if (typeof fn !== "function") {
      console.error(`useMemoizedFn expected parameter is a function, got ${typeof fn}`);
    }
  }
  const fnRef = (0, import_react6.useRef)(fn);
  fnRef.current = (0, import_react6.useMemo)(() => fn, [fn]);
  const memoizedFn = (0, import_react6.useRef)();
  if (!memoizedFn.current) {
    memoizedFn.current = function(...args) {
      return fnRef.current.apply(this, args);
    };
  }
  return memoizedFn.current;
}
var useMemoizedFn_default = useMemoizedFn;

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/hooks/useUpdateEffect.ts
var import_react8 = __toESM(require_react());

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/utils/createUpdateEffect.ts
var import_react7 = __toESM(require_react());
var createUpdateEffect = (hook) => (effect, deps) => {
  const isMounted = (0, import_react7.useRef)(false);
  hook(() => {
    return () => {
      isMounted.current = false;
    };
  }, []);
  hook(() => {
    if (!isMounted.current) {
      isMounted.current = true;
    } else {
      return effect();
    }
  }, deps);
};

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/hooks/useUpdateEffect.ts
var useUpdateEffect_default = createUpdateEffect(import_react8.useEffect);

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/utils/createUseStorageState.ts
function isFunction(obj) {
  return typeof obj === "function";
}
function createUseStorageState(getStorage) {
  function useStorageState(key, options) {
    let storage;
    try {
      storage = getStorage();
    } catch (err) {
      console.error(err);
    }
    const serializer = (value) => {
      if (options == null ? void 0 : options.serializer) {
        return options == null ? void 0 : options.serializer(value);
      }
      return JSON.stringify(value);
    };
    const deserializer = (value) => {
      if (options == null ? void 0 : options.deserializer) {
        return options == null ? void 0 : options.deserializer(value);
      }
      return JSON.parse(value);
    };
    function getStoredValue() {
      try {
        const raw = storage == null ? void 0 : storage.getItem(key);
        if (raw) {
          return deserializer(raw);
        }
      } catch (e) {
        console.error(e);
      }
      if (isFunction(options == null ? void 0 : options.defaultValue)) {
        return options == null ? void 0 : options.defaultValue();
      }
      return options == null ? void 0 : options.defaultValue;
    }
    const [state, setState] = (0, import_react9.useState)(() => getStoredValue());
    useUpdateEffect_default(() => {
      setState(getStoredValue());
    }, [key]);
    const updateState = (value) => {
      if (typeof value === "undefined") {
        setState(void 0);
        storage == null ? void 0 : storage.removeItem(key);
      } else if (isFunction(value)) {
        const currentState = value(state);
        try {
          setState(currentState);
          storage == null ? void 0 : storage.setItem(key, serializer(currentState));
        } catch (e) {
          console.error(e);
        }
      } else {
        try {
          setState(value);
          storage == null ? void 0 : storage.setItem(key, serializer(value));
        } catch (e) {
          console.error(e);
        }
      }
    };
    return [state, useMemoizedFn_default(updateState)];
  }
  return useStorageState;
}

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/hooks/useLocalStorageState.ts
var useLocalStorageState = createUseStorageState(() => localStorage);
var useLocalStorageState_default = useLocalStorageState;

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/hooks/useWhyDidYouUpdate.ts
var import_react10 = __toESM(require_react());
function useWhyDidYouUpdate(componentName, props) {
  const prevProps = (0, import_react10.useRef)({});
  (0, import_react10.useEffect)(() => {
    if (prevProps.current) {
      const allKeys = Object.keys({ ...prevProps.current, ...props });
      const changedProps = {};
      allKeys.forEach((key) => {
        if (prevProps.current[key] !== props[key]) {
          changedProps[key] = {
            from: prevProps.current[key],
            to: props[key]
          };
        }
      });
      if (Object.keys(changedProps).length) {
        console.log("[why-did-you-update]", componentName, changedProps);
      }
    }
    prevProps.current = props;
  });
}

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Flex/index.tsx
var import_react11 = __toESM(require_react());
import "/Users/xiaoyu/Desktop/vant/node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Flex/index.css";
var Flex = (props) => {
  const {
    tag = "div",
    style,
    className,
    children,
    align,
    justify,
    wrap,
    direction,
    inline,
    ...rest
  } = props;
  const Tag = tag;
  const internalStyle = import_react11.default.useMemo(() => {
    return {
      ...style,
      "--align": align,
      "--justify": justify,
      "--wrap": wrap,
      "--direction": direction,
      "--display": inline ? "inline-flex" : "flex"
    };
  }, [style, align, justify, wrap, direction]);
  return import_react11.default.createElement(Tag, {
    className: clsx_m_default("doc-flex", className),
    style: internalStyle,
    ...rest
  }, children);
};
var Flex_default = Flex;

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Dropdown/index.tsx
var import_react12 = __toESM(require_react());
import "/Users/xiaoyu/Desktop/vant/node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Dropdown/index.less";
var Dropdown = ({
  overlay,
  className,
  children,
  arrow = true,
  placement,
  width,
  offset: [offsetX, offsetY] = ["0px", "0px"],
  style,
  ...props
}) => {
  const computedStyle = import_react12.default.useMemo(() => {
    return {
      ...style,
      "--mdoc-dropdown-overlay-width": width,
      "--mdoc-dropdown-offset-x": offsetX,
      "--mdoc-dropdown-offset-y": offsetY
    };
  }, []);
  return import_react12.default.createElement("div", {
    className: clsx_m_default("doc-dropdown", className, {
      "doc-dropdown--overlay": overlay && arrow
    }),
    style: computedStyle,
    ...props
  }, children, overlay && import_react12.default.createElement("div", {
    className: clsx_m_default("doc-dropdown__child", placement)
  }, import_react12.default.createElement("div", {
    className: "doc-dropdown__child_content"
  }, overlay)));
};
var Dropdown_default = Dropdown;

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Icons/index.ts
var Icons_exports = {};
__export(Icons_exports, {
  CodeIcon: () => Code_default,
  CopyIcon: () => Copy_default,
  CsbIcon: () => Csb_default,
  DeviceBarIcon: () => DeviceBar_default,
  DoneIcon: () => Done_default,
  FileIcon: () => File_default,
  GitHubIcon: () => Github_default,
  HttpLinkIcon: () => HttpLink_default,
  LanguageIcon: () => Language_default,
  LeftIcon: () => Left_default,
  LightIcon: () => Light_default,
  MoonIcon: () => Moon_default,
  QrcodeIcon: () => Qrcode_default,
  ReloadIcon: () => Reload_default,
  RightIcon: () => Right_default,
  StackblitzIcon: () => Stackblitz_default
});

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Icons/Github.tsx
var import_react13 = __toESM(require_react());
var Github_default = (props) => {
  return import_react13.default.createElement("svg", {
    ...props,
    viewBox: "0 0 24 24",
    fill: "currentColor"
  }, import_react13.default.createElement("path", {
    d: "M12 1.27a11 11 0 00-3.48 21.46c.55.09.73-.28.73-.55v-1.84c-3.03.64-3.67-1.46-3.67-1.46-.55-1.29-1.28-1.65-1.28-1.65-.92-.65.1-.65.1-.65 1.1 0 1.73 1.1 1.73 1.1.92 1.65 2.57 1.2 3.21.92a2 2 0 01.64-1.47c-2.47-.27-5.04-1.19-5.04-5.5 0-1.1.46-2.1 1.2-2.84a3.76 3.76 0 010-2.93s.91-.28 3.11 1.1c1.8-.49 3.7-.49 5.5 0 2.1-1.38 3.02-1.1 3.02-1.1a3.76 3.76 0 010 2.93c.83.74 1.2 1.74 1.2 2.94 0 4.21-2.57 5.13-5.04 5.4.45.37.82.92.82 2.02v3.03c0 .27.1.64.73.55A11 11 0 0012 1.27"
  }));
};

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Icons/HttpLink.tsx
var import_react14 = __toESM(require_react());
var HttpLink_default = (props) => import_react14.default.createElement("svg", {
  ...props,
  viewBox: "0 0 100 100",
  fill: "currentColor"
}, import_react14.default.createElement("path", {
  d: "M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"
}), import_react14.default.createElement("polygon", {
  points: "45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"
}));

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Icons/File.tsx
var import_react15 = __toESM(require_react());
var File_default = (props) => {
  return import_react15.default.createElement("svg", {
    ...props,
    fill: "currentColor",
    viewBox: "0 0 1024 1024"
  }, import_react15.default.createElement("path", {
    d: "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326z m1.8 562H232V136h302v216c0 23.2 18.8 42 42 42h216v494z"
  }));
};

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Icons/Done.tsx
var import_react16 = __toESM(require_react());
var Done_default = (props) => {
  return import_react16.default.createElement("svg", {
    ...props,
    viewBox: "0 0 1024 1024",
    fill: "currentColor"
  }, import_react16.default.createElement("path", {
    d: "M846.933333 309.333333l-452.266666 452.266667a21.333333 21.333333 0 0 1-30.293334 0l-229.973333-229.973333a21.333333 21.333333 0 0 1 0-30.293334l29.866667-29.866666a21.333333 21.333333 0 0 1 30.293333 0l184.746667 184.746666 407.466666-407.466666a21.76 21.76 0 0 1 30.293334 0l29.866666 30.293333a21.333333 21.333333 0 0 1 0 30.293333z"
  }));
};

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Icons/Code.tsx
var import_react17 = __toESM(require_react());
var Code_default = (props) => {
  return import_react17.default.createElement("svg", {
    ...props,
    viewBox: "0 0 1024 1024",
    fill: "currentColor"
  }, import_react17.default.createElement("path", {
    d: "M541.141333 268.864l61.717334 16.938667-132.394667 482.474666-61.717333-16.938666 132.394666-482.474667zM329.002667 298.666667l44.885333 45.610666-175.36 172.586667 175.04 167.573333-44.266667 46.229334L106.666667 517.504 329.002667 298.666667z m355.882666 0l222.336 218.837333L684.586667 730.666667l-44.266667-46.229334 175.018667-167.573333L640 344.277333 684.885333 298.666667z"
  }));
};

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Icons/Csb.tsx
var import_react18 = __toESM(require_react());
var Csb_default = (props) => {
  return import_react18.default.createElement("svg", {
    ...props,
    viewBox: "0 0 1024 1024",
    fill: "currentColor"
  }, import_react18.default.createElement("path", {
    d: "M737.828571 166.857143l0.457143-0.228572h0.228572L512 36.571429 285.6 166.628571h-0.228571l0.8 0.342858L100 274.285714v475.428572L512 987.428571l412-237.714285V274.285714l-186.171429-107.428571zM478.514286 890.971429L314.971429 796.571429V637.028571L166.857143 552.914286V353.028571l311.657143 179.771429v358.171429zM199.085714 294.285714l153.942857-88.914285 158.742858 91.085714 158.971428-91.314286 154.514286 89.142857-313.028572 180.571429-313.142857-180.571429zM857.142857 553.485714l-147.2 83.542857v158.971429l-164.457143 94.857143V533.028571L857.142857 353.257143v200.228571z"
  }));
};

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Icons/Copy.tsx
var import_react19 = __toESM(require_react());
var Copy_default = (props) => {
  return import_react19.default.createElement("svg", {
    ...props,
    viewBox: "0 0 1024 1024",
    fill: "currentColor"
  }, import_react19.default.createElement("path", {
    d: "M928 256H768V96c0-17.066667-14.933333-32-32-32h-640C78.933333 64 64 78.933333 64 96v640c0 17.066667 14.933333 32 32 32H256v160c0 17.066667 14.933333 32 32 32h640c17.066667 0 32-14.933333 32-32v-640c0-17.066667-14.933333-32-32-32zM128 704V128h576v128H288c-17.066667 0-32 14.933333-32 32V704H128z m768 192H320V320h576v576z"
  }));
};

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Icons/DeviceBar.jsx
var import_react20 = __toESM(require_react());
var DeviceBar_default = (props) => {
  return import_react20.default.createElement("svg", {
    ...props,
    fill: "currentColor",
    viewBox: "0 0 1384.3 40.3"
  }, import_react20.default.createElement("path", {
    d: "M1343 5l18.8 32.3c.8 1.3 2.7 1.3 3.5 0L1384 5c.8-1.3-.2-3-1.7-3h-37.6c-1.5 0-2.5 1.7-1.7 3z"
  }), import_react20.default.createElement("circle", {
    cx: "1299",
    cy: "20.2",
    r: "20"
  }), import_react20.default.createElement("path", {
    d: "M1213 1.2h30c2.2 0 4 1.8 4 4v30c0 2.2-1.8 4-4 4h-30c-2.2 0-4-1.8-4-4v-30c0-2.3 1.8-4 4-4zM16 4.2h64c8.8 0 16 7.2 16 16s-7.2 16-16 16H16c-8.8 0-16-7.2-16-16s7.2-16 16-16z"
  }));
};

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Icons/Language.tsx
var import_react21 = __toESM(require_react());
var Language_default = (props) => import_react21.default.createElement("svg", {
  ...props,
  fill: "none",
  viewBox: "0 0 20 18"
}, import_react21.default.createElement("path", {
  d: "M1 3h12.12M7.06 1v2m3.36 14 4.04-9.33L18.5 17m-6.84-2.67h5.6M10.81 3S9.8 6.92 7.35 9.88c-2.44 2.95-5 4.45-5 4.45",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}), import_react21.default.createElement("path", {
  d: "M9.75 12.33s-1.47-1.12-3.03-3.12c-1.56-2-2.35-3.54-2.35-3.54",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}));

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Icons/Light.tsx
var import_react22 = __toESM(require_react());
var Light_default = (props) => import_react22.default.createElement("svg", {
  ...props,
  viewBox: "0 0 16 16",
  fill: "currentColor"
}, import_react22.default.createElement("path", {
  d: "M8 3.2a.77.77 0 0 1-.77-.77V.77a.77.77 0 1 1 1.54 0v1.66A.77.77 0 0 1 8 3.2ZM8 16a.77.77 0 0 1-.77-.77v-1.67a.77.77 0 0 1 1.54 0v1.67A.77.77 0 0 1 8 16Zm3.94-11.17a.77.77 0 0 1-.55-1.3l1.18-1.19a.77.77 0 0 1 1.09 1.09L12.48 4.6a.76.76 0 0 1-.54.22Zm-9.06 9.05a.77.77 0 0 1-.54-1.3l1.18-1.19a.77.77 0 1 1 1.09 1.09l-1.18 1.18a.76.76 0 0 1-.55.22Zm12.35-5.11h-1.66a.77.77 0 0 1 0-1.54h1.66a.77.77 0 0 1 0 1.54Zm-12.8 0H.77a.77.77 0 1 1 0-1.54h1.66a.77.77 0 1 1 0 1.54Zm10.69 5.11a.76.76 0 0 1-.55-.22l-1.18-1.18a.77.77 0 0 1 1.09-1.09l1.18 1.18a.76.76 0 0 1-.54 1.31ZM4.06 4.83a.76.76 0 0 1-.54-.22L2.34 3.43a.77.77 0 0 1 1.09-1.09L4.6 3.52a.77.77 0 0 1-.55 1.31ZM8 11.55a3.55 3.55 0 1 1 0-7.1 3.55 3.55 0 0 1 0 7.1Z"
}));

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Icons/Moon.tsx
var import_react23 = __toESM(require_react());
var Moon_default = (props) => import_react23.default.createElement("svg", {
  ...props,
  viewBox: "0 0 16 16",
  fill: "currentColor"
}, import_react23.default.createElement("path", {
  d: "M4.308 3.385c0-1.178.173-2.37.615-3.385C1.983 1.28 0 4.282 0 7.692A8.308 8.308 0 0 0 8.308 16c3.41 0 6.412-1.983 7.692-4.923-1.015.442-2.207.615-3.385.615a8.308 8.308 0 0 1-8.307-8.307Z"
}));

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Icons/Left.tsx
var import_react24 = __toESM(require_react());
var Left_default = (props) => {
  return import_react24.default.createElement("svg", {
    ...props,
    viewBox: "0 0 1000 1000",
    fill: "currentColor"
  }, import_react24.default.createElement("path", {
    fillRule: "evenodd",
    d: "M296.114 508.035c-3.22-13.597.473-28.499 11.079-39.105l333.912-333.912c16.271-16.272 42.653-16.272 58.925 0s16.272 42.654 0 58.926L395.504 498.47l304.574 304.574c16.272 16.272 16.272 42.654 0 58.926s-42.654 16.272-58.926 0L307.241 528.058a41.472 41.472 0 0 1-11.127-20.023z"
  }));
};

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Icons/Right.tsx
var import_react25 = __toESM(require_react());
var Right_default = (props) => {
  return import_react25.default.createElement("svg", {
    ...props,
    viewBox: "0 0 1024 1024",
    fill: "currentColor"
  }, import_react25.default.createElement("path", {
    d: "M601.1 556.5L333.8 289.3c-24.5-24.5-24.5-64.6 0-89.1s64.6-24.5 89.1 0l267.3 267.3c24.5 24.5 24.5 64.6 0 89.1-24.5 24.4-64.6 24.4-89.1-.1z"
  }), import_react25.default.createElement("path", {
    d: "M690.2 556.5L422.9 823.8c-24.5 24.5-64.6 24.5-89.1 0s-24.5-64.6 0-89.1l267.3-267.3c24.5-24.5 64.6-24.5 89.1 0 24.5 24.6 24.5 64.6 0 89.1z"
  }));
};

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Icons/Stackblitz.tsx
var import_react26 = __toESM(require_react());
var Stackblitz_default = (props) => {
  return import_react26.default.createElement("svg", {
    ...props,
    viewBox: "0 0 1024 1024",
    fill: "currentColor"
  }, import_react26.default.createElement("path", {
    d: "M165.647059 599.913412h297.261176L289.731765 1024 858.352941 420.472471h-298.61647L731.527529 0z"
  }));
};

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Icons/Qrcode.tsx
var import_react27 = __toESM(require_react());
var Qrcode_default = (props) => {
  return import_react27.default.createElement("svg", {
    ...props,
    viewBox: "0 0 1024 1024",
    fill: "currentColor"
  }, import_react27.default.createElement("path", {
    d: "M329.142857 658.285714l0 73.142857-73.142857 0 0-73.142857 73.142857 0zM329.142857 219.428571l0 73.142857-73.142857 0 0-73.142857 73.142857 0zM768 219.428571l0 73.142857-73.142857 0 0-73.142857 73.142857 0zM182.857143 803.986286l219.428571 0 0-218.843429-219.428571 0 0 218.843429zM182.857143 365.714286l219.428571 0 0-219.428571-219.428571 0 0 219.428571zM621.714286 365.714286l219.428571 0 0-219.428571-219.428571 0 0 219.428571zM475.428571 512l0 365.714286-365.714286 0 0-365.714286 365.714286 0zM768 804.571429l0 73.142857-73.142857 0 0-73.142857 73.142857 0zM914.285714 804.571429l0 73.142857-73.142857 0 0-73.142857 73.142857 0zM914.285714 512l0 219.428571-219.428571 0 0-73.142857-73.142857 0 0 219.428571-73.142857 0 0-365.714286 219.428571 0 0 73.142857 73.142857 0 0-73.142857 73.142857 0zM475.428571 73.142857l0 365.714286-365.714286 0 0-365.714286 365.714286 0zM914.285714 73.142857l0 365.714286-365.714286 0 0-365.714286 365.714286 0z"
  }));
};

// ../../node_modules/.pnpm/@rcdoc+theme@0.1.8_biqbaboplfbrettd7655fr4n2y/node_modules/@rcdoc/theme/components/Icons/Reload.tsx
var import_react28 = __toESM(require_react());
var Reload_default = (props) => {
  return import_react28.default.createElement("svg", {
    ...props,
    viewBox: "0 0 20 20",
    fill: "currentColor"
  }, import_react28.default.createElement("path", {
    d: "M17.875 8.313V4.374l-1.284 1.284a7.87 7.87 0 0 0-6.567-3.535 7.876 7.876 0 1 0 7.299 10.839.675.675 0 0 0-1.25-.508A6.528 6.528 0 0 1 3.497 10a6.526 6.526 0 0 1 12.116-3.364l-1.677 1.676h3.938Z",
    fill: "currentColor",
    fillRule: "nonzero"
  }));
};
export {
  Dropdown_default as Dropdown,
  Flex_default as Flex,
  Icons_exports as Icons,
  context_default as MdocSiteContext,
  useApiData_default as useApiData,
  useCodeSandbox_default as useCodeSandbox,
  useCopy_default as useCopy,
  useLocalStorageState_default as useLocalStorageState,
  useMemoizedFn_default as useMemoizedFn,
  useStackBlitz_default as useStackBlitz,
  useUpdateEffect_default as useUpdateEffect,
  useWhyDidYouUpdate
};
//# sourceMappingURL=@rcdoc_theme.js.map
