import {
  getEntryPath,
  setBuildTarget
} from "./chunk-PLIM7P7F.js";
import {
  CWD,
  getPackageJson
} from "./chunk-D3YCLLHO.js";

// src/config/vite.package.ts
function getViteConfigForPackage({
  outputDir,
  minify,
  format
}) {
  setBuildTarget("package");
  const pkgJSON = getPackageJson();
  const { name } = pkgJSON;
  const external = [
    ...Object.keys(format !== "umd" && pkgJSON.dependencies || {}),
    ...Object.keys(pkgJSON.peerDependencies || {})
  ];
  const entry = getEntryPath();
  return {
    root: CWD,
    logLevel: "silent",
    publicDir: "___public___",
    resolve: {
      alias: {
        [pkgJSON.name]: entry
      }
    },
    build: {
      emptyOutDir: false,
      lib: {
        name,
        entry,
        formats: [format],
        fileName: (fmt) => {
          const suffix = fmt === "umd" ? "" : `.${fmt}`;
          return minify ? `${name}${suffix}.min.js` : `${name}${suffix}.js`;
        }
      },
      cssTarget: ["chrome61"],
      minify: minify ? "terser" : false,
      rollupOptions: {
        external,
        output: {
          dir: outputDir,
          exports: "named",
          assetFileNames: (assetInfo) => {
            if (assetInfo.name == "style.css") {
              if (minify)
                return `index.min.css`;
              return `index.css`;
            }
            return assetInfo.name;
          },
          globals: {
            react: "React",
            "react-dom": "ReactDOM"
          }
        }
      }
    }
  };
}

export {
  getViteConfigForPackage
};
