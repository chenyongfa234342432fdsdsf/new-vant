import { InlineConfig } from 'vite';

declare const EXT_REGEXP: RegExp;
declare const DEMO_REGEXP: RegExp;
declare const TEST_REGEXP: RegExp;
declare const ASSET_REGEXP: RegExp;
declare const STYLE_REGEXP: RegExp;
declare const SCRIPT_REGEXP: RegExp;
declare const TYPESCRIPT_REGEXP: RegExp;
declare const ENTRY_EXTS: string[];
declare function removeExt(path: string): string;
declare function replaceExt(path: string, ext: string): string;
declare function hasDefaultExport(code: string): boolean;
/**
 * Get components path Array
 * return ['/Users/3lang/Workspace/github/rcdoc/packages/cli-playground/src/components/button/index.tsx']
 */
declare function getComponents(): Array<string>;
declare function isDir(dir: string): boolean;
declare function isDemoDir(dir: string): boolean;
declare function isTestDir(dir: string): boolean;
declare function isAsset(path: string): boolean;
declare function isStyle(path: string): boolean;
declare function isScript(path: string): boolean;
declare function isTsFile(path: string): boolean;
declare function camelize(str: string): string;
declare function pascalize(str: string): string;
declare function decamelize(str: string, sepc?: string): string;
declare function normalizePath(path: string): string;
declare function getPostcssConfig(): any;
declare type ModuleEnv = 'esmodule' | 'commonjs';
declare type NodeEnv = 'production' | 'development' | 'test';
declare type BuildTarget = 'site' | 'package';
declare function setModuleEnv(value: ModuleEnv): void;
/**
 * set Node Env / 设置Node环境
 * @param value
 */
declare function setNodeEnv(value: NodeEnv): void;
declare function setBuildTarget(value: BuildTarget): void;
declare function isDev(): boolean;
declare function smartOutputFile(filePath: string, content: string): void;
declare function kebabCase(str: string): string;
declare function mergeCustomViteConfig(config: InlineConfig): any;
declare function getConfigThemeAlias(): {
    'rcdoc-theme-default': any;
} | {
    'rcdoc-theme-default'?: undefined;
};
declare function getExistFile({ cwd, files, }: {
    cwd?: string | false;
    files: string[];
}): string | undefined;
declare function isObject(val: any): boolean;
declare function getRepoUrl(url: any, platform?: 'gitlab'): any;
declare function resolveJsFile(filepath: string): Promise<any>;
declare function getEntryPath(): string;

export { ASSET_REGEXP, BuildTarget, DEMO_REGEXP, ENTRY_EXTS, EXT_REGEXP, ModuleEnv, NodeEnv, SCRIPT_REGEXP, STYLE_REGEXP, TEST_REGEXP, TYPESCRIPT_REGEXP, camelize, decamelize, getComponents, getConfigThemeAlias, getEntryPath, getExistFile, getPostcssConfig, getRepoUrl, hasDefaultExport, isAsset, isDemoDir, isDev, isDir, isObject, isScript, isStyle, isTestDir, isTsFile, kebabCase, mergeCustomViteConfig, normalizePath, pascalize, removeExt, replaceExt, resolveJsFile, setBuildTarget, setModuleEnv, setNodeEnv, smartOutputFile };
