import {
  SCRIPT_EXTS
} from "./chunk-D3YCLLHO.js";

// src/compiler/get-deps.ts
import { join } from "path";
import fse from "fs-extra";
var { readFileSync, existsSync } = fse;
var depsMap = {};
var existsCache = {};
var IMPORT_RE = /import\s+?(?:(?:(?:[\w*\s{},]*)\s+from\s+?)|)(?:(?:".*?")|(?:'.*?'))[\s]*?(?:;|$|)/g;
function matchImports(code) {
  return code.match(IMPORT_RE) || [];
}
function exists(filePath) {
  if (!(filePath in existsCache)) {
    existsCache[filePath] = existsSync(filePath);
  }
  return existsCache[filePath];
}
function fillExt(filePath) {
  for (let i = 0; i < SCRIPT_EXTS.length; i++) {
    const completePath = `${filePath}${SCRIPT_EXTS[i]}`;
    if (exists(completePath)) {
      return completePath;
    }
  }
  for (let i = 0; i < SCRIPT_EXTS.length; i++) {
    const completePath = `${filePath}/index${SCRIPT_EXTS[i]}`;
    if (exists(completePath)) {
      return completePath;
    }
  }
  return "";
}
function getPathByImport(code, filePath) {
  const divider = code.includes('"') ? '"' : "'";
  const relativePath = code.split(divider)[1];
  if (relativePath.includes(".")) {
    return fillExt(join(filePath, "..", relativePath));
  }
  return null;
}
function clearDepsCache() {
  depsMap = {};
  existsCache = {};
}
function getDeps(filePath) {
  if (depsMap[filePath]) {
    return depsMap[filePath];
  }
  const code = readFileSync(filePath, "utf-8");
  const imports = matchImports(code);
  const paths = imports.map((item) => getPathByImport(item, filePath)).filter((item) => !!item);
  depsMap[filePath] = paths;
  paths.forEach(getDeps);
  return paths;
}

export {
  fillExt,
  clearDepsCache,
  getDeps
};
