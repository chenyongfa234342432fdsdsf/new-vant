import {
  context_default
} from "./chunk-WOQRSCMF.js";
import {
  PROJECT_SRC_DIR,
  PROJECT_STYLE_DIR
} from "./chunk-D3YCLLHO.js";

// src/common/css.ts
import { get } from "lodash-es";
import { existsSync } from "fs";
import { join, isAbsolute } from "path";
function getCssLang() {
  const preprocessor = get(context_default.opts, "build.css.preprocessor", "less");
  if (preprocessor === "sass") {
    return "scss";
  }
  return preprocessor;
}
function getCssBaseFile() {
  const CSS_LANG = getCssLang();
  let path = join(PROJECT_STYLE_DIR, `base.${CSS_LANG}`);
  const baseFile = get(context_default.opts, "build.css.base", "");
  if (baseFile) {
    path = isAbsolute(baseFile) ? baseFile : join(PROJECT_SRC_DIR, baseFile);
  }
  if (existsSync(path)) {
    return path;
  }
  return null;
}
var IMPORT_STYLE_RE = /import\s+?(?:(?:".*?")|(?:'.*?'))[\s]*?(?:;|$|)/g;
async function replaceCssImport(code) {
  const CSS_LANG = getCssLang();
  return code.replace(IMPORT_STYLE_RE, (str) => str.replace(`.${CSS_LANG}`, ".css"));
}

export {
  getCssLang,
  getCssBaseFile,
  replaceCssImport
};
